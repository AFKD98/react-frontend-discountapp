{"ast":null,"code":"var _jsxFileName = \"/home/faraz/devhike/react-advertisment project/src/components/login.jsx\";\nimport React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login, logout } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport HomePhoto from \"../assets/homephoto2.jpg\";\n\nconst useStyles = theme => ({\n  \"@global\": {\n    body: {\n      backgroundImage: \"url(\" + HomePhoto + \")\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center center\",\n      backgroundSize: \"cover\",\n      backgroundAttachment: \"fixed\",\n      height: \"100%\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5),\n    background: \"linear-gradient(45deg, #8300FF 30%, #48C9B0 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(100, 200, 250, 1)\",\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  }\n});\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setOpen = val => {\n      this.setState({\n        open: val\n      });\n    };\n\n    this.handleClose = () => {\n      {\n        this.setOpen(false);\n        this.props.logout();\n      }\n    };\n\n    this.handleToggle = () => {\n      {\n        this.setOpen(!this.state.open);\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      };\n      console.log(this.props.login(user));\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null,\n      open: false\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //check for reg error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // const { errors, username, password, isLoading } = this.state;\n\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated && this.state.open ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/bookings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"off\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 22\n        }\n      }),\n      label: \"Remember me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }), this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleToggle,\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(Backdrop, {\n      className: classes.backdrop,\n      open: this.state.open,\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nLoginPage.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // to use the state as props\n  isAuthenticated: state.auth.isAuthenticated,\n  // auth is coming from root reducer at /reducers/index.js\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  logout,\n  clearErrors\n})(withStyles(useStyles)(LoginPage));","map":{"version":3,"sources":["/home/faraz/devhike/react-advertisment project/src/components/login.jsx"],"names":["React","Component","TextField","Typography","FormControlLabel","Checkbox","Container","withStyles","Button","Backdrop","CircularProgress","PropTypes","connect","login","logout","clearErrors","Redirect","Alert","HomePhoto","useStyles","theme","body","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","height","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","background","border","borderRadius","boxShadow","color","padding","backdrop","zIndex","drawer","LoginPage","constructor","props","setOpen","val","setState","open","handleClose","handleToggle","state","onChange","e","target","name","value","onSubmit","preventDefault","email","password","user","console","log","msg","bind","componentDidUpdate","prevProps","error","isAuthenticated","id","render","classes","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login, logout } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/errorActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport HomePhoto from \"../assets/homephoto2.jpg\";\nconst useStyles = (theme) => ({\n  \"@global\": {\n    body: {\n      backgroundImage: \"url(\" + HomePhoto + \")\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center center\",\n      backgroundSize: \"cover\",\n      backgroundAttachment: \"fixed\",\n      height: \"100%\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5),\n    background: \"linear-gradient(45deg, #8300FF 30%, #48C9B0 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(100, 200, 250, 1)\",\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n});\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null,\n      open: false,\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    logout: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n  };\n  setOpen = (val) => {\n    this.setState({ open: val });\n  };\n  handleClose = () => {\n    {\n      this.setOpen(false);\n      this.props.logout();\n    }\n  };\n  handleToggle = () => {\n    {\n      this.setOpen(!this.state.open);\n    }\n  };\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      //check for reg error\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password,\n    };\n    console.log(this.props.login(user));\n  };\n\n  render() {\n    const { classes } = this.props;\n    // const { errors, username, password, isLoading } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\n        {this.props.isAuthenticated && this.state.open ? (\n          <Redirect to=\"/bookings\" />\n        ) : null}\n\n        <Typography component=\"h1\" variant=\"h4\">\n          Sign in\n        </Typography>\n        <form onSubmit={this.onSubmit} className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={this.onChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            onChange={this.onChange}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          {this.state.msg ? (\n            <Alert severity=\"error\">{this.state.msg}</Alert>\n          ) : null}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={this.handleToggle}\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Backdrop\n            className={classes.backdrop}\n            open={this.state.open}\n            onClick={this.handleClose}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // to use the state as props\n  isAuthenticated: state.auth.isAuthenticated, // auth is coming from root reducer at /reducers/index.js\n  error: state.error,\n});\n\nexport default connect(mapStateToProps, { login, logout, clearErrors })(\n  withStyles(useStyles)(LoginPage)\n);\n"]},"metadata":{},"sourceType":"module"}