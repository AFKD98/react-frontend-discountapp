{"ast":null,"code":"import { GET_PHOTOGRAPHERS, PHOTOGRAPHERS_LOADING, REGISTER_SUCCESS, REGISTER_FAIL, DELETE_PHOTOGRAPHER, UPDATE_PHOTOGRAPHER, LOGOUT_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, USER_LOADING, AUTH_ERROR, ADD_PHOTOGRAPHER_FAIL } from \"./types\";\nimport { returnErrors } from \"./errorActions\";\nimport { tokenConfig } from \"./authActions\";\nimport axios from \"axios\"; // Login\n\nexport const loginPhoto = ({\n  Email,\n  Password\n}) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // request body\n\n  const body = JSON.stringify({\n    Email,\n    Password\n  });\n  axios.post(\"https://smartlensapplication.herokuapp.com/photographers/login\", body, config).then(res => dispatch({\n    type: LOGIN_SUCCESS,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\"));\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  });\n}; // Logout\n\nexport const logoutPhoto = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n}; // Check token & load user\n\nexport const loadPhotographer = () => (dispatch, getState) => {\n  // USer loading\n  dispatch({\n    type: USER_LOADING\n  });\n  axios.get(\"https://smartlensapplication.herokuapp.com/photographers/getuser\", tokenConfig(getState)).then(res => dispatch({\n    type: USER_LOADED,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n};\nexport const getPhotographers = () => (dispatch, getState) => {\n  dispatch(setPhotographersLoading());\n  axios.get(\"https://smartlensapplication.herokuapp.com/photographers\").then(res => dispatch({\n    type: GET_PHOTOGRAPHERS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addPhotographer = photolad => (dispatch, getState) => {\n  axios.post(\"https://smartlensapplication.herokuapp.com/photographers/add\", photolad, tokenConfig(getState)).then(res => dispatch({\n    type: REGISTER_SUCCESS,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, \"ADD_PHOTOGRAPHER_FAIL\"));\n    dispatch({\n      type: ADD_PHOTOGRAPHER_FAIL\n    });\n  });\n};\nexport const deletePhotographer = id => (dispatch, getState) => {\n  axios.delete(`https://smartlensapplication.herokuapp.com/photographers/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_PHOTOGRAPHER,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const updatePhotographer = photolad => (dispatch, getState) => {\n  const id = photolad._id;\n  axios.post(`https://smartlensapplication.herokuapp.com/photographers/update/${id}`, photolad, tokenConfig(getState)).then(res => dispatch({\n    type: UPDATE_PHOTOGRAPHER,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const updatePhotographerText = photolad => (dispatch, getState) => {\n  const id = photolad._id;\n  axios.post(`https://smartlensapplication.herokuapp.com/photographers/updatetext/${id}`, {\n    //  this.state.photographer\n    Name: photolad.Name,\n    Username: photolad.Username,\n    Password: photolad.Password,\n    ContactNumber: photolad.ContactNumber,\n    Email: photolad.Email,\n    Calendar: photolad.Calendar,\n    //calendar link\n    Level: photolad.Level,\n    Range: photolad.Range,\n    Address: photolad.Address,\n    Equipment: photolad.Equipment,\n    Bio: photolad.Bio,\n    Category: photolad.Category,\n    //check number of categories\n    videos: photolad.videos,\n    date: photolad.date\n  }, tokenConfig(getState)).then(res => dispatch({\n    type: UPDATE_PHOTOGRAPHER,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const setPhotographersLoading = () => {\n  return {\n    type: PHOTOGRAPHERS_LOADING\n  };\n};","map":{"version":3,"sources":["/home/faraz/devhike/react-advertisment project/src/actions/photographerActions.js"],"names":["GET_PHOTOGRAPHERS","PHOTOGRAPHERS_LOADING","REGISTER_SUCCESS","REGISTER_FAIL","DELETE_PHOTOGRAPHER","UPDATE_PHOTOGRAPHER","LOGOUT_SUCCESS","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","USER_LOADING","AUTH_ERROR","ADD_PHOTOGRAPHER_FAIL","returnErrors","tokenConfig","axios","loginPhoto","Email","Password","dispatch","config","headers","body","JSON","stringify","post","then","res","type","payload","data","catch","err","response","status","logoutPhoto","loadPhotographer","getState","get","getPhotographers","setPhotographersLoading","addPhotographer","photolad","deletePhotographer","id","delete","updatePhotographer","_id","updatePhotographerText","Name","Username","ContactNumber","Calendar","Level","Range","Address","Equipment","Bio","Category","videos","date"],"mappings":"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","sourcesContent":["import {\r\n  GET_PHOTOGRAPHERS,\r\n  PHOTOGRAPHERS_LOADING,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  DELETE_PHOTOGRAPHER,\r\n  UPDATE_PHOTOGRAPHER,\r\n  LOGOUT_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  ADD_PHOTOGRAPHER_FAIL,\r\n} from \"./types\";\r\nimport { returnErrors } from \"./errorActions\";\r\nimport { tokenConfig } from \"./authActions\";\r\nimport axios from \"axios\";\r\n\r\n// Login\r\nexport const loginPhoto = ({ Email, Password }) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // request body\r\n  const body = JSON.stringify({ Email, Password });\r\n\r\n  axios\r\n    .post(\r\n      \"https://smartlensapplication.herokuapp.com/photographers/login\",\r\n      body,\r\n      config\r\n    )\r\n    .then((res) =>\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\n// Logout\r\nexport const logoutPhoto = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\n// Check token & load user\r\nexport const loadPhotographer = () => (dispatch, getState) => {\r\n  // USer loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get(\r\n      \"https://smartlensapplication.herokuapp.com/photographers/getuser\",\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getPhotographers = () => (dispatch, getState) => {\r\n  dispatch(setPhotographersLoading());\r\n  axios\r\n    .get(\"https://smartlensapplication.herokuapp.com/photographers\")\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_PHOTOGRAPHERS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const addPhotographer = (photolad) => (dispatch, getState) => {\r\n  axios\r\n    .post(\r\n      \"https://smartlensapplication.herokuapp.com/photographers/add\",\r\n      photolad,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) =>\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnErrors(\r\n          err.response.data,\r\n          err.response.status,\r\n          \"ADD_PHOTOGRAPHER_FAIL\"\r\n        )\r\n      );\r\n      dispatch({\r\n        type: ADD_PHOTOGRAPHER_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deletePhotographer = (id) => (dispatch, getState) => {\r\n  axios\r\n    .delete(\r\n      `https://smartlensapplication.herokuapp.com/photographers/${id}`,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) =>\r\n      dispatch({\r\n        type: DELETE_PHOTOGRAPHER,\r\n        payload: id,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const updatePhotographer = (photolad) => (dispatch, getState) => {\r\n  const id = photolad._id;\r\n  axios\r\n    .post(\r\n      `https://smartlensapplication.herokuapp.com/photographers/update/${id}`,\r\n      photolad,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) =>\r\n      dispatch({\r\n        type: UPDATE_PHOTOGRAPHER,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const updatePhotographerText = (photolad) => (dispatch, getState) => {\r\n  const id = photolad._id;\r\n\r\n  axios\r\n    .post(\r\n      `https://smartlensapplication.herokuapp.com/photographers/updatetext/${id}`,\r\n      {\r\n        //  this.state.photographer\r\n        Name: photolad.Name,\r\n        Username: photolad.Username,\r\n        Password: photolad.Password,\r\n        ContactNumber: photolad.ContactNumber,\r\n        Email: photolad.Email,\r\n        Calendar: photolad.Calendar, //calendar link\r\n        Level: photolad.Level,\r\n        Range: photolad.Range,\r\n        Address: photolad.Address,\r\n        Equipment: photolad.Equipment,\r\n        Bio: photolad.Bio,\r\n        Category: photolad.Category, //check number of categories\r\n        videos: photolad.videos,\r\n        date: photolad.date,\r\n      },\r\n\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) =>\r\n      dispatch({\r\n        type: UPDATE_PHOTOGRAPHER,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const setPhotographersLoading = () => {\r\n  return {\r\n    type: PHOTOGRAPHERS_LOADING,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}