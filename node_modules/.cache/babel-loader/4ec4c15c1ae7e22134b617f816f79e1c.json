{"ast":null,"code":"/**\n * MIT License\n *\n * Copyright (c) 2020 Jason Wilson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = _interopDefault(require('react'));\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar ThemeProvider = require('react-bootstrap/ThemeProvider');\n\nvar classNames = _interopDefault(require('classnames'));\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar DEFAULT_CLASS_PREFIX = 'range-slider';\nvar RangeSlider = React.forwardRef(function (_ref, ref) {\n  var size = _ref.size,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      step = _ref.step,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n      _ref$inputProps = _ref.inputProps,\n      inputProps = _ref$inputProps === void 0 ? {} : _ref$inputProps,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? 'auto' : _ref$tooltip,\n      _ref$tooltipPlacement = _ref.tooltipPlacement,\n      tooltipPlacement = _ref$tooltipPlacement === void 0 ? 'bottom' : _ref$tooltipPlacement,\n      tooltipLabel = _ref.tooltipLabel,\n      _ref$tooltipStyle = _ref.tooltipStyle,\n      tooltipStyle = _ref$tooltipStyle === void 0 ? {} : _ref$tooltipStyle,\n      _ref$tooltipProps = _ref.tooltipProps,\n      tooltipProps = _ref$tooltipProps === void 0 ? {} : _ref$tooltipProps,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className;\n  var prefix = ThemeProvider.useBootstrapPrefix(bsPrefix, DEFAULT_CLASS_PREFIX);\n  var isTooltip = tooltip === 'auto' || tooltip === 'on';\n  var classes = classNames(className, prefix, size && \"\".concat(prefix, \"--\").concat(size), disabled && 'disabled', variant && \"\".concat(prefix, \"--\").concat(variant));\n  var inputEl = /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"range\",\n    className: classes,\n    value: value,\n    min: min,\n    max: max,\n    step: step,\n    onChange: onChange,\n    disabled: disabled,\n    ref: ref,\n    style: {\n      '--value': value\n    }\n  }, inputProps));\n\n  if (isTooltip) {\n    var wrapClasses = classNames(\"\".concat(prefix, \"__wrap\"), size && \"\".concat(prefix, \"__wrap--\").concat(size));\n    var tooltipClasses = classNames(\"\".concat(prefix, \"__tooltip\"), isTooltip && \"\".concat(prefix, \"__tooltip--\").concat(tooltip), tooltipPlacement && \"\".concat(prefix, \"__tooltip--\").concat(tooltipPlacement), disabled && \"\".concat(prefix, \"__tooltip--disabled\"));\n    var thumbRadius = size === 'sm' ? 8 : size === 'lg' ? 12 : 10;\n    var fract = (value - min) / (max - min);\n    var percentLeft = fract * 100;\n    var fractFromCentre = (fract - 0.5) * 2;\n    var adjustment = fractFromCentre * -thumbRadius; // Half thumb width\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: wrapClasses\n    }, inputEl, /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: tooltipClasses,\n      style: _objectSpread2({}, tooltipStyle || {}, {\n        left: \"calc(\".concat(percentLeft, \"% + \").concat(adjustment, \"px)\")\n      })\n    }, tooltipProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"__tooltip__label\")\n    }, tooltipLabel ? tooltipLabel(value) : value), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"__tooltip__arrow\")\n    })));\n  } else {\n    return inputEl;\n  }\n}); // Fix: https://github.com/jaywilz/react-bootstrap-range-slider/issues/3\n\nvar Element = typeof Element === 'undefined' ? function () {} : Element;\nRangeSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  disabled: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  variant: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark', 'light']),\n  inputProps: PropTypes.object,\n  tooltip: PropTypes.oneOf(['auto', 'on', 'off']),\n  tooltipPlacement: PropTypes.oneOf(['top', 'bottom']),\n  tooltipLabel: PropTypes.func,\n  tooltipStyle: PropTypes.object,\n  tooltipProps: PropTypes.object,\n  className: PropTypes.string,\n  ref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]),\n  bsPrefix: PropTypes.string\n};\n/**\n * MIT License\n *\n * Copyright (c) 2020 Jason Wilson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nmodule.exports = RangeSlider;","map":null,"metadata":{},"sourceType":"script"}